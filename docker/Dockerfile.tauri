# Dockerfile for Tauri Application
FROM rust:1.89

# Install Node.js and npm
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get install -y nodejs

# Install Tauri system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libssl-dev \
    pkg-config \
    libwebkit2gtk-4.0-dev \
    libgtk-3-dev \
    libayatana-appindicator3-dev \
    librsvg2-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Tauri CLI
RUN cargo install tauri-cli --version "^1.0"

# Install Rust tools
RUN rustup component add clippy rustfmt

WORKDIR /workspace

# Copy package files for dependency caching
COPY package*.json ./
COPY vitalis-app/package*.json ./vitalis-app/

# Install npm dependencies
RUN npm install
RUN cd vitalis-app && npm install

# Copy Cargo files
COPY Cargo.toml Cargo.lock ./
COPY vitalis-core/Cargo.toml ./vitalis-core/
COPY vitalis-app/src-tauri/Cargo.toml ./vitalis-app/src-tauri/

# Create dummy src files to cache Rust dependencies
RUN mkdir -p vitalis-core/src vitalis-app/src-tauri/src && \
    echo "fn main() {}" > vitalis-core/src/main.rs && \
    echo "pub fn dummy() {}" > vitalis-core/src/lib.rs && \
    echo "fn main() {}" > vitalis-app/src-tauri/src/main.rs

# Build dependencies (this layer will be cached)
RUN cargo build

# Remove dummy files
RUN rm -rf vitalis-core/src vitalis-app/src-tauri/src

ENV RUST_LOG=debug
ENV CARGO_HOME=/usr/local/cargo

CMD ["npm", "run", "tauri", "dev"]